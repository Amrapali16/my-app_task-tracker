{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","PropTypes","string","func","Header","title","onAdd","showAdd","Footer","href","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","App","showAddTask","setShowAddTask","setTasks","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","res","json","data","fetchTask","addTask","Math","floor","random","newTask","deleteTask","method","filter","toggleReminder","taskToToggle","updTask","headers","body","JSON","stringify","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAGMA,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAMC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAGzB,OACA,wBAAQA,QAASA,EACjBC,MAAO,CAACC,gBAAiBJ,GACxBK,UAAU,MAFX,SAGMJ,KAMVF,EAAOO,aAAc,CACjBN,MAAO,aAGXD,EAAOO,aAAe,CAClBL,KAAKM,IAAUC,OACfR,MAAOO,IAAUC,OACjBN,QAASK,IAAUE,MAGRV,QCvBTW,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAMC,EAAa,EAAbA,QAE9B,OACQ,yBAAQR,UAAU,SAAlB,UACI,6BAAKM,IACL,cAAC,EAAD,CAASX,MAAOa,EAAU,MAAQ,QACjCZ,KAAMY,EAAU,QAAU,MAAOX,QAASU,QAKvDF,EAAOJ,aAAe,CAClBK,MAAO,gBAOID,QCbAI,EATA,WACX,OACI,mCACI,oDACA,mBAAGC,KAAK,SAAR,uB,QCiBGC,EAnBF,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,KAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAC5B,OACI,sBACAd,UAAS,eAAUY,EAAKG,UAAY,YACpCC,cAAe,kBAAMF,EAASF,EAAKK,KAFnC,UAGG,+BAAKL,EAAKhB,KACT,cAAC,IAAD,CAASE,MAAO,CAAEH,MAAO,MAAMuB,OAAQ,WACxCrB,QAAS,kBACIgB,EAASD,EAAKK,UAG3B,4BAAIL,EAAKO,UCMLC,EAjBA,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOR,EAAwB,EAAxBA,SAASC,EAAe,EAAfA,SAC9B,OACK,mCACKO,EAAMC,KAAI,SAACV,EAAKW,GAAN,OACX,cAAC,EAAD,CAEAX,KAAMA,EACNC,SAAUA,EACVC,SAAUA,GAHLS,SCiDFC,EArDC,SAAC,GAAa,IAAZjB,EAAW,EAAXA,MAEd,EAAuBkB,mBAAS,IAAhC,mBAAO7B,EAAP,KAAY8B,EAAZ,KACA,EAAqBD,mBAAS,IAA9B,mBAAON,EAAP,KAAWQ,EAAX,KACA,EAA+BF,oBAAS,GAAxC,mBAAOV,EAAP,KAAgBa,EAAhB,KAqBA,OACI,uBAAM5B,UAAU,WAAW6B,SAnBd,SAACC,GAEdA,EAAEC,iBAEEnC,GAKJW,EAAM,CAAEX,OAAMuB,MAAKJ,aAEnBW,EAAQ,IACRC,EAAO,IACPC,GAAY,IARRI,MAAM,sBAcV,UACI,sBAAKhC,UAAU,eAAf,UACI,yCACA,uBAAOiC,KAAM,OAAOC,YAAY,WAAYC,MAAOvC,EAAMwC,SAAU,SAACN,GAAD,OAAOJ,EAAQI,EAAEO,OAAOF,aAG/F,sBAAKnC,UAAU,eAAf,UACI,+CACA,uBAAOiC,KAAM,OAAOC,YAAY,iBAAiBC,MAAOhB,EAAKiB,SAAU,SAACN,GAAD,OAAOH,EAAOG,EAAEO,OAAOF,aAGlG,sBAAKnC,UAAU,kCAAf,UACI,kDACA,uBAAOiC,KAAM,WAAWK,QAASvB,EAChCoB,MAAOpB,EAAUqB,SAAU,SAACN,GAAD,OAAOF,EAAYE,EAAES,cAAcD,eAInE,uBAAOL,KAAK,SAASE,MAAM,YAC3BnC,UAAU,sBCvCPwC,EATD,WACV,OACI,gCACI,+CACA,mBAAG9B,KAAK,IAAR,yBC6GG+B,EAzGH,WACV,MAAsChB,oBAAS,GAA/C,mBAAOiB,EAAP,KAAoBC,EAApB,KACA,EAA0BlB,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcuB,EAAd,KAEAC,qBAAU,WACR,IAAMC,EAAQ,uCAAG,4BAAAC,EAAA,sEACeC,IADf,OACTC,EADS,OAEfL,EAASK,GAFM,2CAAH,qDAKdH,MAGC,IAGH,IAAME,EAAU,uCAAG,8BAAAD,EAAA,sEACCG,MAAM,+BADP,cACXC,EADW,gBAEEA,EAAIC,OAFN,cAEXC,EAFW,yBAIVA,GAJU,2CAAH,qDASVC,EAAS,uCAAG,WAAOrC,GAAP,iBAAA8B,EAAA,sEACEG,MAAM,+BAAD,OAAgCjC,IADvC,cACVkC,EADU,gBAEGA,EAAIC,OAFP,cAEVC,EAFU,yBAITA,GAJS,2CAAH,sDAQTE,EAAO,uCAAG,WAAO3C,GAAP,iBAAAmC,EAAA,sDACR9B,EAAKuC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,EACzCC,EAFQ,aAEI1C,MAAOL,GACzBgC,EAAS,GAAD,mBAAKvB,GAAL,CAAYsC,KAHN,2CAAH,sDAOPC,EAAU,uCAAG,WAAO3C,GAAP,SAAA8B,EAAA,sEACVG,MAAM,+BAAD,OAAgCjC,GAAM,CAChD4C,OAAQ,WAFO,OAIfjB,EAASvB,EAAMyC,QAAO,SAAClD,GAAD,OAAUA,EAAKK,KAAMA,MAJ5B,2CAAH,sDAcV8C,EAAc,uCAAG,WAAO9C,GAAP,qBAAA8B,EAAA,sEACMO,EAAUrC,GADhB,cACf+C,EADe,OAEfC,EAFe,2BAEAD,GAFA,IAEcjD,UAAWiD,EAAajD,WAFtC,SAIHmC,MAAM,+BAAD,OAAgCjC,GAAM,CAC3D4C,OAAQ,MACRK,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUJ,KATF,cAIfd,EAJe,gBAYFA,EAAIC,OAZF,OAYfC,EAZe,OAcrBT,EACEvB,EAAMC,KAAI,SAACV,GAAD,OACRA,EAAKK,KAAOA,EAAZ,2BAAsBL,GAAtB,IAA4BG,SAAUsC,EAAKtC,WAAaH,MAhBvC,4CAAH,sDAqBpB,OACE,cAAC,IAAD,UACE,sBAAKZ,UAAU,YAAf,UACE,cAAC,EAAD,CACEO,MAAO,kBAAMoC,GAAgBD,IAC7BlC,QAASkC,IAGP,qCACGA,GAAe,cAAC,EAAD,CAASnC,MAAOgD,IAC/BlC,EAAMiD,OAAS,EACd,cAAC,EAAD,CACEjD,MAAOA,EACPR,SAAU+C,EACV9C,SAAUiD,IAGZ,sBAMR,cAAC,EAAD,IACA,cAAC,EAAD,UC/FOQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.04ba77c9.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({color,text, onClick})  => {\r\n\r\n\r\n    return (\r\n    <button onClick={onClick}\r\n    style={{backgroundColor: color}}\r\n     className='btn'>\r\n         {text}\r\n    </button>\r\n        \r\n    ) \r\n}\r\n\r\nButton.defaultProps ={\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.defaultProps = {\r\n    text:PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({title, onAdd,showAdd}) => {\r\n\r\nreturn (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button  color={showAdd ? 'red' : 'green'}\r\n             text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title:PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <a href=\"/about\">About</a>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({task , onDelete, onToggle}) => {\r\n    return (\r\n        <div \r\n        className={`task ${task.reminder && 'reminder' }`}\r\n        onDoubleClick={() => onToggle(task.id)}>\r\n           <h3>{task.text}\r\n            <FaTimes style={{ color: 'red',cursor: 'pointer'}} \r\n           onClick={() =>\r\n                        onDelete(task.id)} \r\n           />\r\n           </h3> \r\n           <p>{task.day} \r\n           </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Task\r\n\r\n\r\n","import Task from './Task'\r\n\r\nconst Tasks  = ({tasks ,onDelete,onToggle})  => {\r\n   return (\r\n        <>\r\n            {tasks.map((task,index) => (\r\n            <Task \r\n            key={index} \r\n            task={task} \r\n            onDelete={onDelete}\r\n            onToggle={onToggle}\r\n            \r\n            />\r\n        \r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","\r\nimport { useState } from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n\r\n    const [text,setText] = useState('')\r\n    const [day,setDay] = useState('')\r\n    const [reminder,setReminder] = useState(false)\r\n\r\n\r\n    const onSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type ='text' placeholder='Add Task'  value={text} onChange={(e) => setText(e.target.value) }   />\r\n            </div>\r\n\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type ='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n\r\n            <div className='form-control form-control-check'>\r\n                <label> Set Reminder</label>\r\n                <input type ='checkbox' checked={reminder }\r\n                 value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task'\r\n            className='btn btn-block'\r\n            />\r\n\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","const About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <a href='/' >Go Back</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n\n\n  }, [])\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:3000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n  \n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:3000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  // Add Task\n  const addTask = async (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = async (id) => {\n     await fetch(`http://localhost:3000/tasks/${id}`, {\n      method: 'DELETE',\n  })\n      setTasks(tasks.filter((task) => task.id !==id))\n    \n  }\n     \n    // res.status === 200\n    //   ? setTasks(tasks.filter((task) => task.id !== id))\n    //   : alert('Error Deleting This Task')\n  \n  \n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    const res = await fetch(`http://localhost:3000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updTask),\n    })\n\n    const data = await res.json()\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    )\n  }\n\n  return (\n    <Router>\n      <div className='container'>\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        \n            <>\n              {showAddTask && <AddTask onAdd={addTask} />}\n              {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                />\n              ) : (\n                'No Tasks To Show'\n              )}\n            </>\n          \n        \n       \n        <Footer />\n        <About/>\n      </div>\n    </Router>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './Style.css';\n// import Material from './Material'\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}